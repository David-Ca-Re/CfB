%function ExcelToMIDcore('ExcelFile','DoMean','Protocol', 'DataFile','IonArg012')
    ExcelFile='ExcelToMIDcore.xlsx'
    %ExcelFile='20190613_Results_flux_Ivan-COPY.xlsx';
    Protocol='LC-MS1'; 
    DoMean=1;
    IonArg=1;
    DataFile='ExcelToMIDcore-RawDataInfo.xlsx';
    
    T = readtable(ExcelFile, 'Sheet',1); %,'ReadVariableNames', true);
    [rown, colLength]=size(T);
    molecules_info=readtable(DataFile,'Sheet',1);
    shortFormName=molecules_info(:,1);

    
    
    %To replace 'N/A' by '0'
    T2=table2array(T);
    [a1, b1]=size(T2);
    Data1=T;
    [a2, b2]=size(Data1);
    Data2=Data1;
    for j=1:rown
        for i=1:colLength
           Data2{j,i}=replace(Data1{j,i},'N/A','0');
        end
    end
    
    [num,txt,raw]=xlsread(ExcelFile);
    Names=string(txt(1,:));
    
    for i=5:length(Names);
        s=split(Names(i),'-');
        if regexp(Names(i),'-L');
            N(i)=strcat(s(1),"-",s(2));
        elseif regexp(Names(i),'-D');
            N(i)=strcat(s(1),"-",s(2));
        elseif regexp(Names(i),'-C');
            N(i)=strcat(s(1),"-",s(2));
        else
        %Add another one for -D 
            N(i)=s(1);
        end
    end 
    NamesUni=unique(N);
    %ismember(N,NamesUni(1));
    for n=1:length(NamesUni)
        
        R=cellfun(@str2num, table2cell(T(3:end,ismember(N,NamesUni(n)))),'UniformOutput',false); %206
        if size(R,2)>1
            %need to sum each row
            for r=1:size(R,2)   % This does the sum, but now need to couple this with Data and have the same shape and so on
                D(:,n)=sum(R(:,r));
            end
        elseif size(R,2)==1
            D(:,n)=R(:,:);
        end
    end
    
    %Add the sum if there is more than 1 column for the same m/z
 

    %Commer checking and Data Arrangements, NewTable will be the new table
    %with the correct data to work with
    
    experiments=Data2{:,2};
    %This will extract the commercial line (commer --> COLD)
    commercial=Data2(not(cellfun(@isempty,regexp(experiments,'$Cold'))),:);
    newTable1 = Data2(not(cellfun(@isempty,regexp(experiments,'$S01'))),:);
    newTable2 = Data2(cellfun(@isempty,regexp(experiments,'$S01')),:);
    if isempty(commercial)==1
        NewTable = [newTable1; newTable2(3:end,:)];
    elseif isempty(commercial)==0
        NewTable = [commercial; newTable1; newTable2(3:end,:)];
    end
    
    %Mean calculations if required
    
    %CHECK IF THE FIRST PART AND THE LAST ONE ARE THE SAME
    expHeaders=NewTable(:,2);
    NameUnique=unique(expHeaders);
    Data=NewTable(:,5:end);
    DataArray=Data{:,:};
    if DoMean==1
        Means=zeros(height(NameUnique),width(Data));
        for replicates=1:height(NameUnique)
            BioName=extractBefore(string(expHeaders{1,1}),4);
            Condition=extractAfter(string(expHeaders{1,1}),6);
            regexp(experiments,strcat(BioName+"\w\w\w"+Condition));
            
            DataLineCell=table2cell(Data(ismember(expHeaders,NameUnique(replicates,1)),:));
            for columns=1:width(Data)
                AmountReplicates=height(expHeaders)/height(NameUnique);
                position=find(ismember(expHeaders,NameUnique(replicates,1)))/AmountReplicates;
                Means(position(2),columns)=mean(cellfun(@str2num ,DataLineCell(:,columns),'UniformOutput',1));
            end
        end
        %ExpTitles=array2table(zeros(height(NameUnique),1));
        pos2=1:1:height(NameUnique);
        pos=1:AmountReplicates:height(expHeaders);
        ExpTitles(pos2,1)=expHeaders(pos,1);   
        MeanTable=[ExpTitles array2table(Means)];
    end

    %To clean the names of the molecules
    moleculesUnique=unique(table2cell(Data2(1,5:colLength)));
    moleculesInChar=char(moleculesUnique);
    for i=1:length(moleculesUnique)
        splitted=split(moleculesUnique{1,i},'-');
        molUniqueModified(i,1)=lower(splitted(1));
    end
    
    %To extract each molecule in an txt file
    %First create a dir where the files will be added
    %mkdir molecules_MIDcore
    %folderPath=strcat(pwd,"/molecules_MIDcore");
    
    excel_title=Data2{1,1:colLength};
    
    for i=1:length(moleculesUnique)
    %for i=28
        %This is to search in molecules_info
        molecule=molUniqueModified{i,:};
        %This is to search in NewTable or Means
        molecule_A=strip(moleculesInChar(i,:)); 

        %HEAD 
        %row is the ismember+protocol in row,12
        %for the rows with 1, another ismember with protocol
        row=find(ismember(shortFormName{:,:},lower(molecule)));
        carbonsNumber=molecules_info{row,8};
        fragment=molecules_info{row,3};
        sulfurNumber=molecules_info{row,5};
        siliciumNumber=molecules_info{row,6};
        Carbons=table("carbons",string(carbonsNumber));
        Fragment=table("fragment",string(fragment));
        Silicum=table("silicum",string(siliciumNumber));
        Sulfur=table("sulfur",string(sulfurNumber));
        Head=vertcat(Carbons,Fragment,Silicum,Sulfur);

        
        
        mz=zeros(1,carbonsNumber+1);
        mz(1,1)=molecules_info{row,2};
        MZ=table(zeros(1,1));
        MZ{1,1}=mz(1,1);
        for value=2:carbonsNumber+1
             mz(1,value)=mz(1,value-1)+1;
             MZ{1,value}=string(mz(1,value));
        end
        BodyHeader=table("m/z",string(MZ{:,:}));
        
        %BODY
        A=zeros(rown,1);
        if DoMean==0
            A=NewTable(:,ismember(excel_title(1,5:end),molecule_A));
            newExpTitles=expHeaders;
        elseif DoMean==1
            A=Means(:,ismember(excel_title(1,5:end),molecule_A));
            newExpTitles=ExpTitles;
        end
        %newExpTitles{end,end}=table2cell(table(strcat("final",newExpTitles{end,end})));
        %not needed anymore
        A_final=[string(newExpTitles{:,:}) A];
        %This creates a string array
        
       
        
        
       %Check if there is no row with commer data or the row are zeros in
       %order to generate the commer asuming a Binomial Distribution
        if isempty(commercial)==1 || commercial(1,1)==0
            %This is the case where there is no row on commer (like in LC)
            x=0:(carbonsNumber);
            pdf1=binopdf(x,carbonsNumber,0.01); %1% of carbon is labelled
            commer=zeros(1,1);
            commer(1)=pdf1(1)*mean(cellfun(@str2num, newTable1{:,5}));
            for iii=2:length(pdf1)
                commer(iii)=(pdf1(iii)*commer(1))/pdf1(1);
            end
            commer_vector=table(zeros(1,1));
            for ii=1:length(commer)
                commer_vector{1,ii}=commer(ii);
            end
            commer_line=table("commer",string(commer_vector{:,:}));
        end
  
        
        %It has to be all negative to enter to MIDcore (CfB is positive)
        %for future improvement, MIDcore should be changed to not only
        %accept negative ionization
        
        %IONIZATION
        if IonArg==0 
            %Neutral Add a new column with zeros to the left
            [r, c]=size(A);
            newCol=zeros(r,1);
            A_final=[string(newExpTitles{:,:}) newCol A];
            %Opcio1: tot zeros
            %Opcio2: mirar exemples i pposar ratio m-1/m0 (DIVIDIR M-1/M0 * 100
                %NOSTRES DADES M(MAX)/M0 * 100)
            %Opcio3: buscar valor minim que no afecti (en relació a Opció2)
        elseif IonArg==1
            %Positive change the BodyHeader
            mz=mz-1;
            MZ=string(mz);
            BodyHeader=table("m/z",string(MZ));
        elseif IonArg==2
            %Negative --> Do nothing for now
            
        end


        
        %TO PRINT IN AN OUTFILE       
    
        molName=strcat(molecule,".txt");
        fileID = fopen(molName,"w");
        [rown, ~]=size(Head);
        for row = 1:rown
            fprintf(fileID,"%s \t %s \n",string(Head{row,:}));
        end
        fclose("all");

        fileID = fopen(molName,"a");
        [rown, ~]=size(BodyHeader);
        for row = 1:rown
            fprintf(fileID,"%s \t",string(BodyHeader{row,:}));
            fprintf(fileID,"\n");
        end
        fclose("all");
        
        fileID = fopen(molName,"a");
        [rown, ~]=size(commer_line);
        for row = 1:rown
            fprintf(fileID,"%s \t",string(commer_line{row,:}));
        end
        fprintf(fileID,"\n");
        fclose("all");
        
        fileID = fopen(molName,"a");
        [rown, coln]=size(A_final);
        for row = 1:rown
            fprintf(fileID,"%s \t",string(A_final(row,:)));
            fprintf(fileID,"\n");
        end
        fclose("all");
 
        %destination = fullfile(folderPath,fileID);
        %fileToMove=strcat(pwd,"/",molName);
        %copyfile(fileToMove,folderPath)
        
    end
    
    %To move all the files created (finish with.txt) to molecules_MIDcore
    %folder
    movefile *.txt molecules_MIDcore


%Run R script

% Rpath = 'C:\Program Files\R\R-3.1.1\bin';
% RscriptFileName = 'D:\test\lmm.R';
% RunRcode(RscriptFileName, Rpath);

%!Rscript your_script.r
%!C:\Program Files\R\R-2.14.1\bin\Rscript R-MIDcore.R
%path to R
!/Users/s182286/opt/anaconda3/Applications/RStudio.app R-MIDcore.R
%or just >> RunRcode(RscriptFileName)

%mkdir....
%movefile *_c output_MIDcore



